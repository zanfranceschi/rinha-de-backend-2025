services:
  api01: &api
      image: ghcr.io/emiliosheinz/rinha-de-backend-2025-go:v1.8.0
      hostname: api01
      container_name: api01
      networks:
        - rinha
        - payment-processor
      depends_on:
            postgres:
              condition: service_healthy
            redis:
              condition: service_healthy
      healthcheck:
            test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
            interval: 3s
            timeout: 5s
            retries: 20
      deploy:
        resources:
          limits:
            cpus: "0.5"
            memory: "30MB"
      ulimits:
            nofile:
              soft: 65535
              hard: 65535
      environment:
        - APP_PORT=8080
        - PROCESSOR_DEFAULT_URL=${PROCESSOR_DEFAULT_URL}
        - PROCESSOR_FALLBACK_URL=${PROCESSOR_FALLBACK_URL}
        - POSTGRES_DATABASE_HOSTNAME=${DATABASE_HOSTNAME}
        - POSTGRES_DATABASE_PASSWORD=${DATABASE_PASSWORD}
        - POSTGRES_DATABASE_USER=${DATABASE_USER}
        - POSTGRES_DATABASE_NAME=${DATABASE_NAME}
        - POSTGRES_DATABASE_PORT=${DATABASE_PORT}
        - REDIS_URL=${REDIS_URL}
  api02:
      <<: *api
      hostname: api02
      container_name: api02

  nginx:
      image: nginx:1.25-alpine
      container_name: nginx
      volumes:
        - ./nginx.conf:/etc/nginx/nginx.conf:ro
      depends_on:
        api01:
          condition: service_healthy
        api02:
          condition: service_healthy
      networks:
        - rinha
        - payment-processor
      ports:
        # ObrigatÃ³rio expor/usar a porta 9999 no load balancer!
        - '9999:9999'
      deploy:
        resources:
          limits:
            cpus: '0.2'
            memory: '15MB'
      ulimits:
            nofile:
              soft: 65535
              hard: 65535

  postgres:
      image: postgres:17-alpine
      restart: always
      hostname: ${DATABASE_HOSTNAME}
      command: postgres -c max_connections=512
      container_name: postgres
      environment:
        - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
        - POSTGRES_USER=${DATABASE_USER}
        - POSTGRES_DB=${DATABASE_NAME}
      volumes:
        - ./init.sql:/docker-entrypoint-initdb.d/script.sql
      networks:
        - rinha
      healthcheck:
            test: ["CMD-SHELL", "pg_isready -U postgres"]
            interval: 2s
            timeout: 2s
            retries: 10
      deploy:
        resources:
          limits:
            cpus: '0.2'
            memory: '250MB'

  redis:
    image: redis:8-alpine
    restart: always
    hostname: redis
    container_name: redis 
    command: >
      redis-server --save "" --appendonly no --maxclients 1024
                  --maxmemory 25mb --maxmemory-policy allkeys-lru 
                  --stop-writes-on-bgsave-error no --rdbcompression no
                  --hz 100 --tcp-backlog 511 --timeout 0
                  --loglevel warning
    networks:
      - rinha
    healthcheck:
          test: ["CMD", "redis-cli", "ping"]
          interval: 2s
          timeout: 2s
          retries: 10
    deploy:
      resources:
        limits:
          cpus: '0.1'
          memory: '25MB'

networks:
  payment-processor:
    external: true
  rinha:
    driver: bridge
    name: rinha

