
 api01 Pulling 
 api02 Pulling 
 01d036902a3c Already exists 
 f48a4e2f2cba Pulling fs layer 
 93a5f636b587 Pulling fs layer 
 01d036902a3c Already exists 
 f48a4e2f2cba Pulling fs layer 
 93a5f636b587 Pulling fs layer 
 f48a4e2f2cba Downloading [>                                                  ]  26.03kB/2.554MB
 f48a4e2f2cba Downloading [>                                                  ]  26.03kB/2.554MB
 93a5f636b587 Downloading [>                                                  ]  81.92kB/7.9MB
 93a5f636b587 Downloading [>                                                  ]  81.92kB/7.9MB
 f48a4e2f2cba Download complete 
 f48a4e2f2cba Download complete 
 f48a4e2f2cba Extracting [>                                                  ]  32.77kB/2.554MB
 f48a4e2f2cba Extracting [>                                                  ]  32.77kB/2.554MB
 93a5f636b587 Downloading [=========================================>         ]   6.57MB/7.9MB
 93a5f636b587 Downloading [=========================================>         ]   6.57MB/7.9MB
 93a5f636b587 Verifying Checksum 
 93a5f636b587 Download complete 
 93a5f636b587 Verifying Checksum 
 f48a4e2f2cba Extracting [============================================>      ]  2.261MB/2.554MB
 f48a4e2f2cba Extracting [============================================>      ]  2.261MB/2.554MB
 f48a4e2f2cba Extracting [==================================================>]  2.554MB/2.554MB
 f48a4e2f2cba Extracting [==================================================>]  2.554MB/2.554MB
 f48a4e2f2cba Extracting [==================================================>]  2.554MB/2.554MB
 f48a4e2f2cba Extracting [==================================================>]  2.554MB/2.554MB
 f48a4e2f2cba Pull complete 
 f48a4e2f2cba Pull complete 
 93a5f636b587 Extracting [>                                                  ]   98.3kB/7.9MB
 93a5f636b587 Extracting [>                                                  ]   98.3kB/7.9MB
 93a5f636b587 Extracting [==================================================>]    7.9MB/7.9MB
 93a5f636b587 Extracting [==================================================>]    7.9MB/7.9MB
 93a5f636b587 Pull complete 
 93a5f636b587 Pull complete 
 api02 Pulled 
 api01 Pulled 
 Network rinha  Creating
 Network rinha  Created
 Container redis  Creating
 Container postgres  Creating
 Container redis  Created
 Container postgres  Created
 Container api02  Creating
 Container api01  Creating
 Container api01  Created
 Container api02  Created
 Container nginx  Creating
 Container nginx  Created
Attaching to api01, api02, nginx, postgres, redis
redis     | Starting Redis Server
postgres  | The files belonging to this database system will be owned by user "postgres".
postgres  | This user must also own the server process.
postgres  | 
postgres  | The database cluster will be initialized with locale "en_US.utf8".
postgres  | The default database encoding has accordingly been set to "UTF8".
postgres  | The default text search configuration will be set to "english".
postgres  | 
postgres  | Data page checksums are disabled.
postgres  | 
postgres  | fixing permissions on existing directory /var/lib/postgresql/data ... ok
postgres  | creating subdirectories ... ok
postgres  | selecting dynamic shared memory implementation ... posix
redis     | 1:C 27 Jul 2025 15:07:43.788 # WARNING Memory overcommit must be enabled! Without it, a background save or replication may fail under low memory condition. Being disabled, it can also cause failures without low memory condition, see https://github.com/jemalloc/jemalloc/issues/1328. To fix this issue add 'vm.overcommit_memory = 1' to /etc/sysctl.conf and then reboot or run the command 'sysctl vm.overcommit_memory=1' for this to take effect.
redis     | 1:C 27 Jul 2025 15:07:43.788 * oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo
redis     | 1:C 27 Jul 2025 15:07:43.788 * Redis version=8.0.3, bits=64, commit=00000000, modified=1, pid=1, just started
redis     | 1:C 27 Jul 2025 15:07:43.788 * Configuration loaded
redis     | 1:M 27 Jul 2025 15:07:43.789 * monotonic clock: POSIX clock_gettime
redis     | 1:M 27 Jul 2025 15:07:43.789 * Running mode=standalone, port=6379.
redis     | 1:M 27 Jul 2025 15:07:43.791 * <bf> RedisBloom version 8.0.1 (Git=unknown)
redis     | 1:M 27 Jul 2025 15:07:43.791 * <bf> Registering configuration options: [
redis     | 1:M 27 Jul 2025 15:07:43.791 * <bf> 	{ bf-error-rate       :      0.01 }
redis     | 1:M 27 Jul 2025 15:07:43.791 * <bf> 	{ bf-initial-size     :       100 }
redis     | 1:M 27 Jul 2025 15:07:43.791 * <bf> 	{ bf-expansion-factor :         2 }
redis     | 1:M 27 Jul 2025 15:07:43.791 * <bf> 	{ cf-bucket-size      :         2 }
redis     | 1:M 27 Jul 2025 15:07:43.791 * <bf> 	{ cf-initial-size     :      1024 }
redis     | 1:M 27 Jul 2025 15:07:43.791 * <bf> 	{ cf-max-iterations   :        20 }
redis     | 1:M 27 Jul 2025 15:07:43.791 * <bf> 	{ cf-expansion-factor :         1 }
redis     | 1:M 27 Jul 2025 15:07:43.791 * <bf> 	{ cf-max-expansions   :        32 }
redis     | 1:M 27 Jul 2025 15:07:43.791 * <bf> ]
redis     | 1:M 27 Jul 2025 15:07:43.792 * Module 'bf' loaded from /usr/local/lib/redis/modules//redisbloom.so
redis     | 1:M 27 Jul 2025 15:07:43.797 * <search> Redis version found by RedisSearch : 8.0.3 - oss
redis     | 1:M 27 Jul 2025 15:07:43.797 * <search> RediSearch version 8.0.1 (Git=5688fcc)
redis     | 1:M 27 Jul 2025 15:07:43.797 * <search> Low level api version 1 initialized successfully
redis     | 1:M 27 Jul 2025 15:07:43.797 * <search> gc: ON, prefix min length: 2, min word length to stem: 4, prefix max expansions: 200, query timeout (ms): 500, timeout policy: return, cursor read size: 1000, cursor max idle (ms): 300000, max doctable size: 1000000, max number of search results:  1000000, 
redis     | 1:M 27 Jul 2025 15:07:43.797 * <search> Initialized thread pools!
redis     | 1:M 27 Jul 2025 15:07:43.797 * <search> Disabled workers threadpool of size 0
redis     | 1:M 27 Jul 2025 15:07:43.797 * <search> Subscribe to config changes
redis     | 1:M 27 Jul 2025 15:07:43.797 * <search> Enabled role change notification
redis     | 1:M 27 Jul 2025 15:07:43.798 * <search> Cluster configuration: AUTO partitions, type: 0, coordinator timeout: 0ms
postgres  | selecting default "max_connections" ... 100
redis     | 1:M 27 Jul 2025 15:07:43.881 * <search> Register write commands
redis     | 1:M 27 Jul 2025 15:07:43.882 * Module 'search' loaded from /usr/local/lib/redis/modules//redisearch.so
redis     | 1:M 27 Jul 2025 15:07:43.882 * <timeseries> RedisTimeSeries version 80001, git_sha=577bfa8b5909e7ee572f0b651399be8303dc6641
redis     | 1:M 27 Jul 2025 15:07:43.882 * <timeseries> Redis version found by RedisTimeSeries : 8.0.3 - oss
redis     | 1:M 27 Jul 2025 15:07:43.883 * <timeseries> Registering configuration options: [
redis     | 1:M 27 Jul 2025 15:07:43.883 * <timeseries> 	{ ts-compaction-policy   :              }
redis     | 1:M 27 Jul 2025 15:07:43.883 * <timeseries> 	{ ts-num-threads         :            3 }
redis     | 1:M 27 Jul 2025 15:07:43.883 * <timeseries> 	{ ts-retention-policy    :            0 }
redis     | 1:M 27 Jul 2025 15:07:43.883 * <timeseries> 	{ ts-duplicate-policy    :        block }
redis     | 1:M 27 Jul 2025 15:07:43.883 * <timeseries> 	{ ts-chunk-size-bytes    :         4096 }
redis     | 1:M 27 Jul 2025 15:07:43.883 * <timeseries> 	{ ts-encoding            :   compressed }
redis     | 1:M 27 Jul 2025 15:07:43.883 * <timeseries> 	{ ts-ignore-max-time-diff:            0 }
redis     | 1:M 27 Jul 2025 15:07:43.883 * <timeseries> 	{ ts-ignore-max-val-diff :     0.000000 }
redis     | 1:M 27 Jul 2025 15:07:43.883 * <timeseries> ]
redis     | 1:M 27 Jul 2025 15:07:43.883 * <timeseries> Detected redis oss
redis     | 1:M 27 Jul 2025 15:07:43.883 * Module 'timeseries' loaded from /usr/local/lib/redis/modules//redistimeseries.so
redis     | 1:M 27 Jul 2025 15:07:43.887 * <ReJSON> Created new data type 'ReJSON-RL'
redis     | 1:M 27 Jul 2025 15:07:43.888 * <ReJSON> version: 80001 git sha: unknown branch: unknown
redis     | 1:M 27 Jul 2025 15:07:43.888 * <ReJSON> Exported RedisJSON_V1 API
redis     | 1:M 27 Jul 2025 15:07:43.888 * <ReJSON> Exported RedisJSON_V2 API
redis     | 1:M 27 Jul 2025 15:07:43.888 * <ReJSON> Exported RedisJSON_V3 API
redis     | 1:M 27 Jul 2025 15:07:43.888 * <ReJSON> Exported RedisJSON_V4 API
redis     | 1:M 27 Jul 2025 15:07:43.888 * <ReJSON> Exported RedisJSON_V5 API
redis     | 1:M 27 Jul 2025 15:07:43.888 * <ReJSON> Enabled diskless replication
redis     | 1:M 27 Jul 2025 15:07:43.888 * <ReJSON> Initialized shared string cache, thread safe: false.
redis     | 1:M 27 Jul 2025 15:07:43.888 * Module 'ReJSON' loaded from /usr/local/lib/redis/modules//rejson.so
redis     | 1:M 27 Jul 2025 15:07:43.888 * <search> Acquired RedisJSON_V5 API
redis     | 1:M 27 Jul 2025 15:07:43.888 * Server initialized
redis     | 1:M 27 Jul 2025 15:07:43.888 * Ready to accept connections tcp
postgres  | selecting default "shared_buffers" ... 128MB
postgres  | selecting default time zone ... UTC
postgres  | creating configuration files ... ok
postgres  | running bootstrap script ... ok
postgres  | sh: locale: not found
postgres  | 2025-07-27 15:07:46.582 UTC [35] WARNING:  no usable system locales were found
postgres  | performing post-bootstrap initialization ... ok
postgres  | initdb: warning: enabling "trust" authentication for local connections
postgres  | initdb: hint: You can change this by editing pg_hba.conf or using the option -A, or --auth-local and --auth-host, the next time you run initdb.
postgres  | syncing data to disk ... ok
postgres  | 
postgres  | 
postgres  | Success. You can now start the database server using:
postgres  | 
postgres  |     pg_ctl -D /var/lib/postgresql/data -l logfile start
postgres  | 
postgres  | waiting for server to start....2025-07-27 15:07:49.893 UTC [53] LOG:  starting PostgreSQL 17.5 on x86_64-pc-linux-musl, compiled by gcc (Alpine 14.2.0) 14.2.0, 64-bit
postgres  | 2025-07-27 15:07:49.903 UTC [53] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
postgres  | 2025-07-27 15:07:49.923 UTC [56] LOG:  database system was shut down at 2025-07-27 15:07:49 UTC
postgres  | 2025-07-27 15:07:50.005 UTC [53] LOG:  database system is ready to accept connections
postgres  |  done
postgres  | server started
postgres  | CREATE DATABASE
postgres  | 
postgres  | 
postgres  | /usr/local/bin/docker-entrypoint.sh: running /docker-entrypoint-initdb.d/script.sql
postgres  | psql:/docker-entrypoint-initdb.d/script.sql:1: NOTICE:  table "payments" does not exist, skipping
postgres  | DROP TABLE
postgres  | CREATE TYPE
postgres  | CREATE TABLE
postgres  | CREATE INDEX
postgres  | CREATE INDEX
postgres  | CREATE INDEX
postgres  | 
postgres  | 
postgres  | waiting for server to shut down....2025-07-27 15:07:50.817 UTC [53] LOG:  received fast shutdown request
postgres  | 2025-07-27 15:07:50.827 UTC [53] LOG:  aborting any active transactions
postgres  | 2025-07-27 15:07:50.882 UTC [53] LOG:  background worker "logical replication launcher" (PID 59) exited with exit code 1
postgres  | 2025-07-27 15:07:50.884 UTC [54] LOG:  shutting down
postgres  | 2025-07-27 15:07:50.909 UTC [54] LOG:  checkpoint starting: shutdown immediate
api01     | 2025/07/27 15:07:51 Configuration initialized successfully
api01     | 2025/07/27 15:07:51 Attempt 1/10: Failed to ping database: dial tcp 172.20.0.2:5432: connect: connection refused
api02     | 2025/07/27 15:07:51 Configuration initialized successfully
api02     | 2025/07/27 15:07:51 Attempt 1/10: Failed to ping database: dial tcp 172.20.0.2:5432: connect: connection refused
postgres  | 2025-07-27 15:07:51.454 UTC [54] LOG:  checkpoint complete: wrote 937 buffers (5.7%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.337 s, sync=0.130 s, total=0.571 s; sync files=309, longest=0.014 s, average=0.001 s; distance=4289 kB, estimate=4289 kB; lsn=0/191D740, redo lsn=0/191D740
postgres  | 2025-07-27 15:07:51.465 UTC [53] LOG:  database system is shut down
postgres  |  done
postgres  | server stopped
postgres  | 
postgres  | PostgreSQL init process complete; ready for start up.
postgres  | 
postgres  | 2025-07-27 15:07:51.586 UTC [1] LOG:  starting PostgreSQL 17.5 on x86_64-pc-linux-musl, compiled by gcc (Alpine 14.2.0) 14.2.0, 64-bit
postgres  | 2025-07-27 15:07:51.586 UTC [1] LOG:  listening on IPv4 address "0.0.0.0", port 5432
postgres  | 2025-07-27 15:07:51.586 UTC [1] LOG:  listening on IPv6 address "::", port 5432
postgres  | 2025-07-27 15:07:51.601 UTC [1] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
postgres  | 2025-07-27 15:07:51.614 UTC [78] LOG:  database system was shut down at 2025-07-27 15:07:51 UTC
postgres  | 2025-07-27 15:07:51.627 UTC [1] LOG:  database system is ready to accept connections
api01     | Database connection established successfully
api01     | 2025/07/27 15:07:53 Default health status initialized for default: &{Failing:false MinResponseTime:0}
api01     | 2025/07/27 15:07:53 Default health status initialized for fallback: &{Failing:false MinResponseTime:0}
api01     | asynq: pid=1 2025/07/27 15:07:53.390789 INFO: Starting processing
api01     | asynq: pid=1 2025/07/27 15:07:53.390809 INFO: Send signal TSTP to stop processing new tasks
api01     | asynq: pid=1 2025/07/27 15:07:53.390811 INFO: Send signal TERM or INT to terminate the process
api02     | Database connection established successfully
api02     | asynq: pid=1 2025/07/27 15:07:53.415622 INFO: Starting processing
api02     | asynq: pid=1 2025/07/27 15:07:53.415649 INFO: Send signal TSTP to stop processing new tasks
api02     | asynq: pid=1 2025/07/27 15:07:53.415663 INFO: Send signal TERM or INT to terminate the process
nginx     | /docker-entrypoint.sh: /docker-entrypoint.d/ is not empty, will attempt to perform configuration
nginx     | /docker-entrypoint.sh: Looking for shell scripts in /docker-entrypoint.d/
nginx     | /docker-entrypoint.sh: Launching /docker-entrypoint.d/10-listen-on-ipv6-by-default.sh
nginx     | 10-listen-on-ipv6-by-default.sh: info: Getting the checksum of /etc/nginx/conf.d/default.conf
nginx     | 10-listen-on-ipv6-by-default.sh: info: Enabled listen on IPv6 in /etc/nginx/conf.d/default.conf
nginx     | /docker-entrypoint.sh: Sourcing /docker-entrypoint.d/15-local-resolvers.envsh
nginx     | /docker-entrypoint.sh: Launching /docker-entrypoint.d/20-envsubst-on-templates.sh
nginx     | /docker-entrypoint.sh: Launching /docker-entrypoint.d/30-tune-worker-processes.sh
nginx     | /docker-entrypoint.sh: Configuration complete; ready for start up
api01     | 2025/07/27 15:08:03 Acting as leader. Ensuring health checks are running.
api02     | 2025/07/27 15:08:03 Not the leader.
api01     | 2025/07/27 15:08:08 Health check for default OK: {Failing:false MinResponseTime:0}
api01     | 2025/07/27 15:08:08 Health check for fallback OK: {Failing:false MinResponseTime:0}
api01     | 2025/07/27 15:08:13 Acting as leader. Ensuring health checks are running.
api02     | 2025/07/27 15:08:13 Not the leader.
api01     | 2025/07/27 15:08:13 Health check for default OK: {Failing:false MinResponseTime:0}
api01     | 2025/07/27 15:08:13 Health check for fallback OK: {Failing:false MinResponseTime:0}
api01     | 2025/07/27 15:08:18 Health check for default OK: {Failing:false MinResponseTime:100}
api01     | 2025/07/27 15:08:18 Health check for fallback OK: {Failing:false MinResponseTime:0}
api01     | 2025/07/27 15:08:23 Acting as leader. Ensuring health checks are running.
api02     | 2025/07/27 15:08:23 Not the leader.
api01     | 2025/07/27 15:08:23 Health check for default OK: {Failing:false MinResponseTime:100}
api01     | 2025/07/27 15:08:23 Health check for fallback OK: {Failing:false MinResponseTime:0}
api01     | 2025/07/27 15:08:28 Health check for default OK: {Failing:true MinResponseTime:100}
api01     | 2025/07/27 15:08:28 Health check for fallback OK: {Failing:false MinResponseTime:0}
api01     | 2025/07/27 15:08:33 Acting as leader. Ensuring health checks are running.
api02     | 2025/07/27 15:08:33 Not the leader.
api01     | 2025/07/27 15:08:33 Health check for fallback OK: {Failing:false MinResponseTime:0}
api01     | 2025/07/27 15:08:33 Health check for default OK: {Failing:true MinResponseTime:100}
api02     | 2025/07/27 15:08:36 Setting fallback as failing
api02     | 2025/07/27 15:08:36 Setting fallback as failing
api02     | 2025/07/27 15:08:36 Setting fallback as failing
api02     | 2025/07/27 15:08:36 Setting fallback as failing
api02     | 2025/07/27 15:08:36 Setting fallback as failing
api02     | 2025/07/27 15:08:36 Setting fallback as failing
api02     | 2025/07/27 15:08:36 Setting fallback as failing
api01     | 2025/07/27 15:08:38 Health check for default OK: {Failing:true MinResponseTime:2000}
api01     | 2025/07/27 15:08:38 Health check for fallback OK: {Failing:true MinResponseTime:1000}
api01     | 2025/07/27 15:08:43 Acting as leader. Ensuring health checks are running.
api02     | 2025/07/27 15:08:43 Not the leader.
api01     | 2025/07/27 15:08:43 Health check for default OK: {Failing:true MinResponseTime:2000}
api01     | 2025/07/27 15:08:43 Health check for fallback OK: {Failing:true MinResponseTime:1000}
api01     | 2025/07/27 15:08:48 Health check for default OK: {Failing:false MinResponseTime:20}
api01     | 2025/07/27 15:08:48 Health check for fallback OK: {Failing:false MinResponseTime:20}
api01     | 2025/07/27 15:08:53 Acting as leader. Ensuring health checks are running.
api02     | 2025/07/27 15:08:53 Not the leader.
api01     | 2025/07/27 15:08:53 Health check for default OK: {Failing:false MinResponseTime:20}
api01     | 2025/07/27 15:08:53 Health check for fallback OK: {Failing:false MinResponseTime:20}
api01     | 2025/07/27 15:08:58 Health check for default OK: {Failing:false MinResponseTime:0}
api01     | 2025/07/27 15:08:58 Health check for fallback OK: {Failing:false MinResponseTime:5000}
api01     | 2025/07/27 15:09:03 Acting as leader. Ensuring health checks are running.
api02     | 2025/07/27 15:09:03 Not the leader.
api01     | 2025/07/27 15:09:03 Health check for default OK: {Failing:false MinResponseTime:0}
api01     | 2025/07/27 15:09:03 Health check for fallback OK: {Failing:false MinResponseTime:5000}
[Knginx exited with code 0
api02     | asynq: pid=1 2025/07/27 15:09:07.840010 INFO: Stopping processor
api02     | asynq: pid=1 2025/07/27 15:09:07.840080 INFO: Processor stopped
api02     | asynq: pid=1 2025/07/27 15:09:07.840085 INFO: Starting graceful shutdown
api02     | asynq: pid=1 2025/07/27 15:09:07.840091 INFO: Waiting for all workers to finish...
api01     | asynq: pid=1 2025/07/27 15:09:07.840749 INFO: Stopping processor
api01     | asynq: pid=1 2025/07/27 15:09:07.840784 INFO: Processor stopped
api01     | asynq: pid=1 2025/07/27 15:09:07.840788 INFO: Starting graceful shutdown
api01     | asynq: pid=1 2025/07/27 15:09:07.840799 INFO: Waiting for all workers to finish...
api01     | asynq: pid=1 2025/07/27 15:09:07.982542 INFO: All workers have finished
api02     | asynq: pid=1 2025/07/27 15:09:07.983137 INFO: All workers have finished
api01     | asynq: pid=1 2025/07/27 15:09:07.983620 INFO: Exiting
api02     | asynq: pid=1 2025/07/27 15:09:07.983671 INFO: Exiting
api01     | 2025/07/27 15:09:08 Health check for default OK: {Failing:false MinResponseTime:0}
api01     | 2025/07/27 15:09:08 Health check for fallback OK: {Failing:false MinResponseTime:5000}
api01     | 2025/07/27 15:09:13 Acting as leader. Ensuring health checks are running.
api02     | 2025/07/27 15:09:13 Not the leader.
api01     | 2025/07/27 15:09:13 Health check for default OK: {Failing:false MinResponseTime:0}
api01     | 2025/07/27 15:09:13 Health check for fallback OK: {Failing:false MinResponseTime:5000}
[Kapi02 exited with code 137
[Kapi01 exited with code 137
redis     | 1:signal-handler (1753628958) Received SIGTERM scheduling shutdown...
postgres  | 2025-07-27 15:09:18.551 UTC [1] LOG:  received fast shutdown request
redis     | 1:M 27 Jul 2025 15:09:18.552 * User requested shutdown...
redis     | 1:M 27 Jul 2025 15:09:18.552 # Redis is now ready to exit, bye bye...
postgres  | 2025-07-27 15:09:18.556 UTC [1] LOG:  aborting any active transactions
postgres  | 2025-07-27 15:09:18.560 UTC [1] LOG:  background worker "logical replication launcher" (PID 81) exited with exit code 1
postgres  | 2025-07-27 15:09:18.563 UTC [76] LOG:  shutting down
postgres  | 2025-07-27 15:09:18.574 UTC [76] LOG:  checkpoint starting: shutdown immediate
postgres  | 2025-07-27 15:09:18.688 UTC [76] LOG:  checkpoint complete: wrote 356 buffers (2.2%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.047 s, sync=0.045 s, total=0.126 s; sync files=30, longest=0.040 s, average=0.002 s; distance=5663 kB, estimate=5663 kB; lsn=0/1EA5560, redo lsn=0/1EA5560
postgres  | 2025-07-27 15:09:18.698 UTC [1] LOG:  database system is shut down
[Kredis exited with code 0
[Kpostgres exited with code 0
log truncated at line 1000
