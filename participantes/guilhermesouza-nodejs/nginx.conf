events {
  worker_connections 4096;
  use epoll;
  multi_accept on;
}

http {
    # Optimize for high load
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 30;
    keepalive_requests 1000;
    
    # Connection and timeout settings
    client_max_body_size 1m;
    client_body_timeout 10s;
    client_header_timeout 10s;
    
    upstream backend_servers {
        least_conn;
        server backend-01:3000 max_fails=3 fail_timeout=10s;
        server backend-02:3000 max_fails=3 fail_timeout=10s;
        keepalive 300;
        keepalive_requests 1000;
        keepalive_timeout 60s;
    }

    server {
        listen 9999;
        
        # Optimize buffer sizes
        client_body_buffer_size 1m;
        client_header_buffer_size 1k;
        large_client_header_buffers 4 8k;

        location / {
            proxy_pass http://backend_servers;
            
            # Connection settings
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            
            # Headers
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            
            # Timeout settings - increased for high load
            proxy_connect_timeout 5s;
            proxy_send_timeout 10s;
            proxy_read_timeout 10s;
            
            # Buffer settings for better performance
            proxy_buffering on;
            proxy_buffer_size 4k;
            proxy_buffers 8 4k;
            proxy_busy_buffers_size 8k;
            
            # Don't buffer for fast responses
            proxy_request_buffering off;
            
            # Retry settings
            proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
            proxy_next_upstream_tries 2;
            proxy_next_upstream_timeout 3s;
        }
    }
}