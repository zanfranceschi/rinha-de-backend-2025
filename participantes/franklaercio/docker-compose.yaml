version: "3.8"

services:
  postgres:
    image: postgres:15-alpine
    hostname: postgres
    command: postgres -c max_connections=450 -c shared_buffers=40MB -c effective_cache_size=120MB -c work_mem=4MB -c maintenance_work_mem=16MB -c synchronous_commit=off -c fsync=off
    container_name: db
    restart: unless-stopped
    networks:
      - backend
    environment:
      POSTGRES_DB: rinha
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d rinha"]
      interval: 2s
      timeout: 2s
      retries: 10
    deploy:
      resources:
        limits:
          cpus: "0.4"
          memory: "150MB"

  redis:
    image: redis:7-alpine
    hostname: redis
    container_name: redis
    restart: unless-stopped
    networks:
      - backend
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 2s
      timeout: 2s
      retries: 10
    deploy:
      resources:
        limits:
          cpus: "0.3"
          memory: "80MB"

  nginx:
    image: nginx:1.25-alpine
    container_name: nginx_load_balancer
    networks:
      - backend
    ports:
      - "9999:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - api1
      - api2
    deploy:
      resources:
        limits:
          cpus: "0.2"
          memory: "20MB"

  api1: &api1
    image: franklaercio/rinha-backend-2025:latest
    hostname: api1
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - backend
      - payment-processor
    environment:
      DB_HOST: postgres
      DB_USER: postgres
      DB_PASSWORD: postgres
      DB_NAME: rinha
      REDIS_HOST: "redis"
      REDIS_PORT: "6379"
      HTTP_PORT: "8080"
      PAYMENT_WORKERS: "40"
      PAYMENT_URL_DEFAULT: "http://payment-processor-default:8080"
      PAYMENT_URL_FALLBACK: "http://payment-processor-fallback:8080"
    deploy:
      restart_policy:
        condition: on-failure
        delay: 2s
        max_attempts: 10
        window: 5s
      resources:
        limits:
          cpus: "0.3"
          memory: "50M"

  api2:
    <<: *api1
    hostname: api2

volumes:
  postgres_data:
  redis_data:

networks:
  backend:
    driver: bridge
  payment-processor:
    external: true