user www-data;
worker_processes auto;

events {
    use epoll;
    worker_connections 350;
}

http {
     error_log /dev/null crit;
    access_log off;
    
    lua_shared_dict shared_data 1m;
   
    upstream api {
        server unix:/tmp/api1.sock;
        server unix:/tmp/api2.sock;
    }
   
    upstream api1 {
        server unix:/tmp/api1.sock;
    }
   
    upstream api2 {
        server unix:/tmp/api2.sock;
    }
   
    server {
        listen 9999;
             
        location /api1/ {
            rewrite ^/api1/(.*)$ /$1 break;
            proxy_pass http://api1;
            proxy_http_version 1.1;
            proxy_set_header Connection "";
        }
       
        location /api2/ {
            rewrite ^/api2/(.*)$ /$1 break;
            proxy_pass http://api2;
            proxy_http_version 1.1;
            proxy_set_header Connection "";
        }

        location = /payments {
            content_by_lua_block {
                ngx.req.read_body()
                local data = ngx.req.get_body_data()
                local counter = ngx.shared.shared_data:get("rr_counter") or 0
                local selected_socket = counter % 2 == 0 and "unix:/tmp/api1.sock" or "unix:/tmp/api2.sock"

                ngx.shared.shared_data:set("rr_counter", counter + 1)

                local sock = ngx.socket.tcp()
                sock:connect(selected_socket)
                
                local request = "POST /payments HTTP/1.1\r\n" ..
                              "Host: localhost\r\n" ..
                              "Content-Type: application/json\r\n" ..
                              "Content-Length: " .. #data .. "\r\n" ..
                              "Connection: close\r\n\r\n" ..
                              data
                
                sock:send(request)
                sock:close()

                ngx.status = 200
                ngx.say("OK")
            }
        }
        
        location / {
            proxy_pass http://api;
            proxy_http_version 1.1;
            proxy_set_header Connection "";
        }
    }
}