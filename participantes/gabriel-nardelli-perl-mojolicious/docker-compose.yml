services:
  api1: &api
    image: gvnardelli/rinha-2025:latest
    ports:
      - 3001:3000
    networks:
      - backend
      - payment-processor
    depends_on:
      redis:
        condition: service_healthy
      postgres:
        condition: service_healthy
    environment:
      - APP_ENV=docker
      - REDIS_URL=redis:6379
      - PROCESSOR_DEFAULT_URL=http://payment-processor-default:8080
      - PROCESSOR_FALLBACK_URL=http://payment-processor-fallback:8080
      - POSTGRES_DSN=postgresql://monk:rinha_2025@postgres:5432/payments
      - POSTGRES_USER=monk
      - POSTGRES_PASSWORD=rinha_2025
      - POSTGRES_DB=payments
    deploy:
      resources:
        limits:
          cpus: '0.35'
          memory: '95MB'

  api2:
    <<: *api
    ports:
      - 3002:3000

  worker_light:
    image: gvnardelli/rinha-2025:latest
    depends_on:
      redis:
        condition: service_healthy
    environment:
      - APP_ENV=docker
      - PROCESSOR_DEFAULT_URL=http://payment-processor-default:8080
      - PROCESSOR_FALLBACK_URL=http://payment-processor-fallback:8080
    networks:
      - backend
      - payment-processor
    command: perl scripts/worker_light.pl
    deploy:
      resources:
        limits:
          cpus: '0.1'
          memory: '20MB'

  worker_heavy:
    image: gvnardelli/rinha-2025:latest
    depends_on:
      redis:
        condition: service_healthy
      postgres:
        condition: service_healthy
    environment:
      - APP_ENV=docker
      - PROCESSOR_DEFAULT_URL=http://payment-processor-default:8080
      - PROCESSOR_FALLBACK_URL=http://payment-processor-fallback:8080
      - POSTGRES_DSN=postgresql://monk:rinha_2025@postgres:5432/payments
      - POSTGRES_USER=monk
      - POSTGRES_PASSWORD=rinha_2025
      - POSTGRES_DB=payments
    networks:
      - backend
      - payment-processor
    command: perl scripts/worker_heavy.pl
    deploy:
      resources:
        limits:
          cpus: '0.15'
          memory: '70MB'

  nginx:
    image: nginx
    depends_on:
      - api1
      - api2
    volumes:
      - ./proxy/nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "9999:9999"
    networks:
      - backend
      - payment-processor
    deploy:
      resources:
        limits:
          cpus: "0.1"
          memory: "20MB"

  redis:
    image: redis:7.2-alpine
    command: redis-server --save "" --appendonly no --maxclients 20000
    hostname: redis
    networks:
      - backend
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5
    deploy:
      resources:
        limits:
          cpus: "0.1"
          memory: "10MB"

  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_USER=monk
      - POSTGRES_PASSWORD=rinha_2025
      - POSTGRES_DB=payments
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./data/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - backend
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d payments -U monk"]
      interval: 5s
      timeout: 5s
      retries: 5
    deploy:
      resources:
        limits:
          cpus: "0.35"
          memory: "40MB"

volumes:
  pgdata:

networks:
  backend:
    driver: bridge
  payment-processor:
    external: true