services:
  api1:
    image: vhogemann/rinha-de-backend-2025-fsharp:0.0.2
    # build:
    #   context: .
    #   dockerfile: Api/Dockerfile
    ports:
        - "8081:8080"
    depends_on:
      - postgres
    networks:
      - backend
      - payment-processor
    healthcheck:
        test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
        interval: 30s
        timeout: 10s
        retries: 5
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: "100MB"
  api2:
    image: vhogemann/rinha-de-backend-2025-fsharp:0.0.2
    # build:
    #   context: .
    #   dockerfile: Api/Dockerfile
    ports:
        - "8082:8080"
    depends_on:
      - postgres
    networks:
      - backend
      - payment-processor
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080/health" ]
      interval: 30s
      timeout: 10s
      retries: 5
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: "100MB"
  postgres:
    # Banco de dados
    image: postgres
    hostname: postgres
    restart: always
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
      POSTGRES_DB: postgres
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready", "-d", "postgres" ]
      interval: 5s
      timeout: 10s
      retries: 5
      start_period: 10s
    expose:
      - "5432"
    ports:
      - "5432:5432"
    volumes:
      - ./bootstrap.sql:/docker-entrypoint-initdb.d/bootstrap.sql
      - ./postgresql.conf:/etc/postgresql/postgresql.conf
    networks:
      - backend
      - payment-processor
    deploy:
      resources:
        limits:
          cpus: '0.4'
          memory: '100MB'
  nginx:
    # Load Balancer
    image: nginx:latest
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - api1
      - api2
    ports:
      - "9999:9999"
    networks:
      - backend
      - payment-processor
    deploy:
      resources:
        limits:
          cpus: '0.1'
          memory: '10MB'
networks:
  backend:
    driver: bridge
  payment-processor:
    external: true