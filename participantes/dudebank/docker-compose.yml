services:
  api1: &api-service
    image: eber404/dudebank:latest
    env_file:
      - .env
    ports:
      - "3001:8080"
    networks:
      - backend
      - payment-processor
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    deploy:
      resources:
        limits:
          cpus: "0.6"
          memory: "120MB"

  api2:
    <<: *api-service
    ports:
      - "3002:8080"

  nginx:
    image: nginx:alpine
    env_file:
      - .env
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - api1
      - api2
    networks:
      - backend
    ports:
      - "9999:80"
    deploy:
      resources:
        limits:
          cpus: "0.05"
          memory: "15MB"

  postgres:
    image: postgres:alpine
    env_file:
      - .env
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    volumes:
      - ./sql/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    networks:
      - backend
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s
    deploy:
      resources:
        limits:
          cpus: "0.05"
          memory: "70MB"

  redis:
    image: redis:alpine
    command: redis-server --maxmemory 50mb --maxmemory-policy allkeys-lru --tcp-keepalive 60
    env_file:
      - .env
    networks:
      - backend
    ports:
      - "6379:6379"
    deploy:
      resources:
        limits:
          cpus: "0.05"
          memory: "50MB"

networks:
  backend:
    driver: bridge
  payment-processor:
    external: true

volumes:
  postgres_data: