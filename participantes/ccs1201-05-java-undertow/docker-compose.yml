x-backend-templates:
  app: &app
    image: csouzadocker/rinha2025-java-undertow:v0.0.4
    depends_on:
      backend-db:
        condition: service_healthy
    networks:
      - backend
      - payment-processor
    deploy:
      restart_policy:
        condition: on-failure
        delay: 2s
        max_attempts: 1
        window: 5s
      resources:
        limits:
          cpus: "0.55"
          memory: "100MB"

  app-env: &app-env
    BATCH_SIZE: "150"
    BATCH_LIMIT: "15"
    DATASOURCE_CLASS_NAME: "org.postgresql.Driver"
    DATASOURCE_MAXIMUM_POOL_SIZE: "3"
    DATASOURCE_MINIMUM_IDLE: "3"
    DATASOURCE_PASSWORD: "rinha"
    DATASOURCE_TIMEOUT: "20000"
    DATASOURCE_URL: "jdbc:postgresql://postgres:5432/rinha"
    DATASOURCE_USERNAME: "rinha"
    PAYMENT_PROCESSOR_DEFAULT_URL: "http://payment-processor-default:8080"
    PAYMENT_PROCESSOR_FALLBACK_URL: "http://payment-processor-fallback:8080"
    PAYMENT_PROCESSOR_WORKERS: "10"
    PAYMENT_PROCESSOR_REQUEST_TIMEOUT: "6000"
    PAYMENT_PROCESSOR_CONNECTION_TIMEOUT: "200"
    SERVER_PORT: "8080"
    SERVER_IO_THREADS: "2"
    SERVER_WORKER_THREADS: "8"

#############################################################################################

services:
  nginx:
    image: nginx:alpine
    container_name: backend-nginx
    hostname: nginx
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    ports:
      - "9999:9999"
    depends_on:
      - app1
      - app2
    networks:
      - backend
    deploy:
      resources:
        limits:
          cpus: "0.2"
          memory: "30MB"

  app1:
    <<: *app
    container_name: backend-api1
    hostname: app1
    environment:
      <<: *app-env

  app2:
    <<: *app
    container_name: backend-api2
    hostname: app2
    environment:
      <<: *app-env

  backend-db:
    image: postgres:17-alpine
    container_name: backend-db
    hostname: postgres
    environment:
      POSTGRES_DB: rinha
      POSTGRES_USER: rinha
      POSTGRES_PASSWORD: rinha
    volumes:
      - ./init.sql/init-backend-db.sql:/docker-entrypoint-initdb.d/init.sql
      - ./init.sql/postgresql.conf:/docker-entrypoint-initdb.d/postgresql.conf
    ports:
      - "5432:5432"
    networks:
      - backend
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U rinha -d rinha" ]
      interval: 3s
      timeout: 3s
      retries: 10
    deploy:
      resources:
        limits:
          cpus: "0.2"
          memory: "120MB"

networks:
  backend:
    driver: bridge
  payment-processor:
    external: true

