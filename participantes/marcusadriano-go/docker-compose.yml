services:
  api1: &api # API - Instância 01
    image: marcusadriano/rinha-de-backend-2025-go:latest
    hostname: api1
    environment:
      - DATABASE_URL=postgres://postgres:postgres@db:5432/dbpayments?pool_max_conns=10&pool_min_conns=10&pool_max_conn_lifetime=330s
      - MAIN_PROCESSOR_URL=http://payment-processor-default:8080
      - FALLBACK_PROCESSOR_URL=http://payment-processor-fallback:8080
    networks:
      - rinha
      - payment-processor
    depends_on:
      db:
        condition: service_healthy
    deploy:
      restart_policy:
        condition: on-failure
        delay: 2s
        max_attempts: 10
        window: 5s
      resources:
        limits:
          cpus: '0.5'
          memory: '100MB'

  api2: # API - Instância 02
    <<: *api
    hostname: api2

  nginx: # Load Balancer
    image: nginx:1.29.0-alpine
    networks:
      - rinha
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - db
      - api1
      - api2
    expose:
      - "9999"
    ports:
      - "9999:9999"
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: '50MB'

  db: # Banco de dados
    image: postgres:17-alpine
    networks:
      - rinha
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=dbpayments
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -d postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    deploy:
      restart_policy:
        condition: on-failure
        delay: 2s
        max_attempts: 10
        window: 5s
      resources:
        limits:
          cpus: '0.25'
          memory: '100MB'

networks:
  rinha:
    driver: bridge
  payment-processor:
    external: true
